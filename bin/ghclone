#!/bin/bash

#shellcheck source=../lib/provision.sh
source "$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)/lib/provision.sh"
lib_init

dest_basedir="$HOME/Code"
owner_default="$(id -un)"
shallow=false
branch=

usage() {
  cat << EOF >&2
Usage: $(basename "$0") <repo>

Clones <repo> to "$dest_basedir" if it doesn't exist then prints the location.

<repo> is [owner/]<name>. If owner is not specified, "$owner_default" will be used.

OPTIONS:

  -b  <branch>  Point to <branch>  
  -s            Shallow clone

EXAMPLES:

ghclone bad-code
ghclone morhetz/gruvbox
EOF
}

while getopts 'sb:' flag; do
  case "${flag}" in
    b) branch="$OPTARG" ;;
    s) shallow=true ;;
    *) usage ; exit 1 ;; 
  esac
done
shift $((OPTIND-1))

repo="${1:-}"
if [[ -z "$repo" ]]; then
  usage
  exit 1
fi

name="$(basename "$repo" .git).git"
owner="$(dirname "$repo")"
if [[ "$owner" == "." ]]; then
  owner="$owner_default"
fi
url="https://github.com/$owner/$name"
dest_dir="$dest_basedir/$(basename "$url" .git)"

# build up cmdstr
cmdstr="git clone"
if [[ -n "$branch" ]]; then
  cmdstr="$cmdstr -b $branch"
fi
if $shallow; then
  cmdstr="$cmdstr --depth 1"
fi
cmdstr="$cmdstr $url $dest_dir"

if [[ ! -d "$dest_dir" ]]; then
  mkdir -p "$dest_basedir"
  log_info "Executing: $cmdstr"
  if ! eval "$cmdstr" > /dev/null; then
    log_err "command failed: $cmdstr"
    exit 1
  fi
fi

echo "$dest_dir"
